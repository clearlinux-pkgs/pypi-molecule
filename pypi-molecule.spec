#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : pypi-molecule
Version  : 4.0.4
Release  : 21
URL      : https://files.pythonhosted.org/packages/b6/33/2986c9774b3ab3c6fc42ce779a592ade7e03217ba894adac07282de422de/molecule-4.0.4.tar.gz
Source0  : https://files.pythonhosted.org/packages/b6/33/2986c9774b3ab3c6fc42ce779a592ade7e03217ba894adac07282de422de/molecule-4.0.4.tar.gz
Summary  : Molecule aids in the development and testing of Ansible roles
Group    : Development/Tools
License  : MIT
BuildRequires : buildreq-distutils3
BuildRequires : pypi(alabaster)
BuildRequires : pypi(ansi2html)
BuildRequires : pypi(ansible_compat)
BuildRequires : pypi(ansible_core)
BuildRequires : pypi(ansible_pygments)
BuildRequires : pypi(arrow)
BuildRequires : pypi(attrs)
BuildRequires : pypi(babel)
BuildRequires : pypi(binaryornot)
BuildRequires : pypi(certifi)
BuildRequires : pypi(cffi)
BuildRequires : pypi(cfgv)
BuildRequires : pypi(chardet)
BuildRequires : pypi(charset_normalizer)
BuildRequires : pypi(check_jsonschema)
BuildRequires : pypi(click)
BuildRequires : pypi(click_help_colors)
BuildRequires : pypi(commonmark)
BuildRequires : pypi(cookiecutter)
BuildRequires : pypi(coverage)
BuildRequires : pypi(cryptography)
BuildRequires : pypi(distlib)
BuildRequires : pypi(distro)
BuildRequires : pypi(docutils)
BuildRequires : pypi(enrich)
BuildRequires : pypi(exceptiongroup)
BuildRequires : pypi(execnet)
BuildRequires : pypi(filelock)
BuildRequires : pypi(flake8)
BuildRequires : pypi(identify)
BuildRequires : pypi(idna)
BuildRequires : pypi(imagesize)
BuildRequires : pypi(importlib_metadata)
BuildRequires : pypi(importlib_resources)
BuildRequires : pypi(iniconfig)
BuildRequires : pypi(jinja2)
BuildRequires : pypi(jinja2_time)
BuildRequires : pypi(jsonschema)
BuildRequires : pypi(markupsafe)
BuildRequires : pypi(mccabe)
BuildRequires : pypi(more_itertools)
BuildRequires : pypi(nodeenv)
BuildRequires : pypi(packaging)
BuildRequires : pypi(pathspec)
BuildRequires : pypi(pexpect)
BuildRequires : pypi(pkgutil_resolve_name)
BuildRequires : pypi(platformdirs)
BuildRequires : pypi(pluggy)
BuildRequires : pypi(pre_commit)
BuildRequires : pypi(ptyprocess)
BuildRequires : pypi(py)
BuildRequires : pypi(pycodestyle)
BuildRequires : pypi(pycparser)
BuildRequires : pypi(pyflakes)
BuildRequires : pypi(pygments)
BuildRequires : pypi(pyparsing)
BuildRequires : pypi(pyrsistent)
BuildRequires : pypi(python_dateutil)
BuildRequires : pypi(python_slugify)
BuildRequires : pypi(pytz)
BuildRequires : pypi(pyyaml)
BuildRequires : pypi(requests)
BuildRequires : pypi(resolvelib)
BuildRequires : pypi(rich)
BuildRequires : pypi(ruamel_yaml)
BuildRequires : pypi(ruamel_yaml_clib)
BuildRequires : pypi(setuptools)
BuildRequires : pypi(setuptools_scm)
BuildRequires : pypi(simplejson)
BuildRequires : pypi(six)
BuildRequires : pypi(snowballstemmer)
BuildRequires : pypi(sphinx)
BuildRequires : pypi(sphinx_ansible_theme)
BuildRequires : pypi(sphinx_notfound_page)
BuildRequires : pypi(sphinx_rtd_theme)
BuildRequires : pypi(sphinxcontrib_applehelp)
BuildRequires : pypi(sphinxcontrib_devhelp)
BuildRequires : pypi(sphinxcontrib_htmlhelp)
BuildRequires : pypi(sphinxcontrib_jsmath)
BuildRequires : pypi(sphinxcontrib_qthelp)
BuildRequires : pypi(sphinxcontrib_serializinghtml)
BuildRequires : pypi(subprocess_tee)
BuildRequires : pypi(text_unidecode)
BuildRequires : pypi(toml)
BuildRequires : pypi(tomli)
BuildRequires : pypi(typing_extensions)
BuildRequires : pypi(urllib3)
BuildRequires : pypi(virtualenv)
BuildRequires : pypi(yamllint)
BuildRequires : pypi(zipp)
BuildRequires : pypi-pluggy
BuildRequires : pypi-pytest
BuildRequires : pypi-tox
BuildRequires : pypi-virtualenv
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}

%description
Molecule provides support for testing with multiple instances, operating
systems and distributions, virtualization providers, test frameworks and
testing scenarios.

%prep
%setup -q -n molecule-4.0.4
cd %{_builddir}/molecule-4.0.4
pushd ..
cp -a molecule-4.0.4 buildavx2
popd

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1672933478
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz "
export FCFLAGS="$FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz "
export FFLAGS="$FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz "
export CXXFLAGS="$CXXFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz "
export MAKEFLAGS=%{?_smp_mflags}
pypi-dep-fix.py . cerberus
pypi-dep-fix.py . PyYAML
python3 -m build --wheel --skip-dependency-check --no-isolation
pushd ../buildavx2/
export CFLAGS="$CFLAGS -m64 -march=x86-64-v3 -Wl,-z,x86-64-v3 "
export CXXFLAGS="$CXXFLAGS -m64 -march=x86-64-v3 -Wl,-z,x86-64-v3 "
export FFLAGS="$FFLAGS -m64 -march=x86-64-v3 -Wl,-z,x86-64-v3 "
export FCFLAGS="$FCFLAGS -m64 -march=x86-64-v3 "
export LDFLAGS="$LDFLAGS -m64 -march=x86-64-v3 "
pypi-dep-fix.py . cerberus
pypi-dep-fix.py . PyYAML
python3 -m build --wheel --skip-dependency-check --no-isolation

popd

%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/pypi-molecule
cp %{_builddir}/molecule-%{version}/LICENSE %{buildroot}/usr/share/package-licenses/pypi-molecule/82314adfc4f5f364b3443f5df8a3393fd2121964 || :
pip install --root=%{buildroot} --no-deps --ignore-installed dist/*.whl
pypi-dep-fix.py %{buildroot} cerberus
pypi-dep-fix.py %{buildroot} PyYAML
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----
pushd ../buildavx2/
export CFLAGS="$CFLAGS -m64 -march=x86-64-v3 -Wl,-z,x86-64-v3 "
export CXXFLAGS="$CXXFLAGS -m64 -march=x86-64-v3 -Wl,-z,x86-64-v3 "
export FFLAGS="$FFLAGS -m64 -march=x86-64-v3 -Wl,-z,x86-64-v3 "
export FCFLAGS="$FCFLAGS -m64 -march=x86-64-v3 "
export LDFLAGS="$LDFLAGS -m64 -march=x86-64-v3 "
pip install --root=%{buildroot}-v3 --no-deps --ignore-installed dist/*.whl
popd
/usr/bin/elf-move.py avx2 %{buildroot}-v3 %{buildroot} %{buildroot}/usr/share/clear/filemap/filemap-%{name}

%files
%defattr(-,root,root,-)
